{"version":3,"file":"static/js/680.c6f3fb81.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.jsx","services/tmdb-api.js"],"sourcesContent":["import { fadeIn } from 'GlobalStyle';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  animation: ${fadeIn} 700ms ease-in-out;\n`;\n\nexport const CardLink = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n`;\n\nexport const ImgWrap = styled.div`\n  margin: 0 auto 8px auto;\n  border-radius: 8px;\n  width: 200px;\n  height: 268px;\n  display: flex;\n  align-content: center;\n  overflow: hidden;\n  transition: all var(--basic-transition);\n  &:hover {\n    box-shadow: 0px 0px 16px 4px var(--basic-dark);\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform var(--basic-transition);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid var(--basic-white);\n  background-color: ${({ $color }) => $color};\n  color: var(--basic-white);\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  CardLink,\n  Image,\n  ImgWrap,\n  List,\n  Rating,\n  Title,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <CardLink\n            to={\n              location.pathname === '/' ? `movies/${movie.id}` : `${movie.id}`\n            }\n            state={{ from: location }}\n          >\n            <ImgWrap>\n              <Image\n                src={\n                  movie.poster_path\n                    ? `${POSTERS_URL}w300${movie.poster_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n                }\n                alt={movie.title}\n              />\n            </ImgWrap>\n            <Title>{movie.title}</Title>\n            <p>\n              {movie.release_date\n                ? new Date(movie.release_date).toLocaleDateString(\n                    'en-US',\n                    dateOptions\n                  )\n                : ''}\n            </p>\n            <Rating\n              $color={ratingColorDetect(Math.round(movie.vote_average * 10))}\n            >\n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </Rating>\n          </CardLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nfunction ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = 'grey';\n  } else if (number < 50) {\n    color = 'red';\n  } else if (number < 70) {\n    color = 'orange';\n  } else if (number >= 70) {\n    color = 'green';\n  }\n  return color;\n}\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Error, Hero, Info, PageTitle, Title } from './HomePage.styled';\n\nconst IMAGE_PATH = 'https://image.tmdb.org/t/p/original/';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [heroImage, setHeroImage] = useState('');\n\n  useEffect(() => {\n    fetchMoviesData('trending')\n      .then(({ results }) => {\n        if (!results.length) {\n          setError(\n            'We are sorry, but something went wrong :( Please, try again later'\n          );\n          return;\n        }\n        setMovies(results);\n        setError('');\n        const randomIndex = Math.floor(Math.random() * results.length + 0);\n        setHeroImage(`${IMAGE_PATH}${results[randomIndex]?.backdrop_path}`);\n      })\n      .catch(() =>\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        )\n      );\n  }, []);\n\n  return (\n    <div>\n      <Hero $heroImage={heroImage}>\n        <PageTitle>\n          Welcome to MovieMingle - <br />\n          Your Gateway to Cinematic Excellence!\n        </PageTitle>\n        <Info>\n          Discover the latest and trending films or <br />\n          explore a world of movies tailored to your preferences. <br />\n          Whether you're in the mood for blockbuster hits or hidden gems, <br />\n          our powerful search engine has you covered.\n        </Info>\n      </Hero>\n      <Title>Popular today:</Title>\n      {error === '' ? <MoviesList movies={movies} /> : <Error>{error}</Error>}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  color: var(--basic-white);\n  font-size: 60px;\n  line-height: 80px;\n  text-shadow: 0px 11px 10px #082925b2;\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: var(--basic-white);\n  text-shadow: 3px 0px 7px rgba(85, 85, 85, 0.8),\n    -3px 0px 7px rgba(85, 85, 85, 0.8), 0px 4px 7px rgba(85, 85, 85, 0.8);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  margin: 0 auto 16px auto;\n`;\n\nexport const Error = styled.p`\n  font-size: 24px;\n  margin: 24px 0;\n`;\n\nexport const Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 52px;\n  width: 100%;\n  height: 480px;\n  background: linear-gradient(to top, #082925b2 40%, #0c403b79 100%),\n    center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n`;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `/movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","fadeIn","CardLink","Link","_templateObject2","ImgWrap","_templateObject3","Image","_templateObject4","Title","_templateObject5","Rating","_templateObject6","_ref","$color","movies","location","useLocation","dateOptions","year","month","day","_jsx","children","map","movie","_jsxs","to","pathname","concat","id","state","from","src","poster_path","alt","title","release_date","Date","toLocaleDateString","ratingColorDetect","Math","round","vote_average","number","color","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","heroImage","setHeroImage","useEffect","fetchMoviesData","then","_results$randomIndex","results","length","randomIndex","floor","random","backdrop_path","catch","Hero","$heroImage","PageTitle","Info","MoviesList","Error","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","type","query","page","endpointByType","searchParams","response","_context","prev","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","image","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}