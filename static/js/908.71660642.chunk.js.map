{"version":3,"file":"static/js/908.71660642.chunk.js","mappings":"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","sources":["components/Photos/Photos.styled.jsx","components/ImageModal/ImageModal.styled.jsx","components/ImageModal/ImageModal.jsx","components/Photos/Photos.jsx","helpers/scrollToAdditionalMenu.js","pages/HomePage/HomePage.styled.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 24px;\n`;\n\nexport const ImagesList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  justify-content: center;\n  max-width: 1264px;\n`;\n\nexport const ImagesItem = styled.li`\n  width: 240px;\n  cursor: pointer;\n  border-radius: 6px;\n  overflow: hidden;\n  transition: all var(--basic-transition);\n\n  &:hover {\n    scale: 1.08;\n    box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\n      rgba(0, 0, 0, 0.3) 0px 7px 13px -3px,\n      rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\n  }\n`;\n","import { IoMdClose } from 'react-icons/io';\nimport styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  max-width: 1200px;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n`;\n\nexport const Backdrop = styled.div`\n  z-index: 1200;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const CloseBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: 16px;\n  width: 40px;\n  height: 40px;\n  background-color: transparent;\n  color: var(--basic-white);\n  border: none;\n  cursor: pointer;\n\n  @media screen and (max-width: 639px) {\n    width: 28px;\n    height: 28px;\n  }\n`;\n\nexport const CloseIcon = styled(IoMdClose)`\n  width: 100%;\n  height: 100%;\n`;\n","import { createPortal } from 'react-dom';\nimport {\n  Backdrop,\n  CloseBtn,\n  CloseIcon,\n  ModalContainer,\n} from './ImageModal.styled';\nimport { useEffect } from 'react';\n\nconst BIG_IMAGE_PATH = 'https://image.tmdb.org/t/p/original';\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ImageModal = ({ currentImage, closeModal }) => {\n  const handleBackdropClose = e => {\n    if (e.target === e.currentTarget) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    const handleCloseByEsc = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleCloseByEsc);\n\n    return () => {\n      window.removeEventListener('keydown', handleCloseByEsc);\n    };\n  }, [closeModal]);\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClose}>\n      <ModalContainer>\n        <CloseBtn\n          type=\"button\"\n          aria-label=\"close image modal window\"\n          onClick={closeModal}\n        >\n          <CloseIcon />\n        </CloseBtn>\n        <img src={`${BIG_IMAGE_PATH}${currentImage}`} alt=\"movie-scene\" />\n      </ModalContainer>\n    </Backdrop>,\n    modalRoot\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Container, ImagesItem, ImagesList } from './Photos.styled';\nimport { ImageModal } from 'components/ImageModal/ImageModal';\nimport { Image } from 'components/ImageModal/ImageModal.styled';\nimport { scrollToAdditionalMenu } from 'helpers/scrollToAdditionalMenu';\nimport { Error } from 'pages/HomePage/HomePage.styled';\n\nconst SMALL_IMAGE_PATH = 'https://image.tmdb.org/t/p/w300';\n\nconst Photos = () => {\n  const { movieId } = useParams();\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentImage, setCurrentImage] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    fetchMoviesData('image', movieId)\n      .then(({ backdrops }) => {\n        if (!backdrops.length) {\n          setError('We are sorry, but there are no photos yet :(');\n          return;\n        }\n        setImages(backdrops.map(item => item.file_path));\n        setError('');\n      })\n      .catch(() =>\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        )\n      )\n      .finally(() => {\n        scrollToAdditionalMenu();\n      });\n  }, [movieId]);\n\n  const handleClick = e => {\n    setCurrentImage(e.target.dataset.path);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setCurrentImage(null);\n  };\n\n  return (\n    <Container>\n      {error === '' ? (\n        <ImagesList>\n          {images.map(image => (\n            <ImagesItem key={image} onClick={handleClick}>\n              <Image\n                src={`${SMALL_IMAGE_PATH}${image}`}\n                alt=\"movie-scene\"\n                data-path={image}\n              ></Image>\n            </ImagesItem>\n          ))}\n        </ImagesList>\n      ) : (\n        <Error>{error}</Error>\n      )}\n      {isModalOpen && (\n        <ImageModal currentImage={currentImage} closeModal={closeModal} />\n      )}\n    </Container>\n  );\n};\n\nexport default Photos;\n","import { scroller } from 'react-scroll';\n\nexport const scrollToAdditionalMenu = () => {\n  scroller.scrollTo('myScrollToElement', {\n    duration: 1000,\n    smooth: true,\n    offset: -80,\n  });\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  color: var(--basic-white);\n  font-size: 60px;\n  line-height: 1.33;\n  text-shadow: 0px 11px 10px #082925b2;\n\n  @media screen and (max-width: 1279px) {\n    font-size: 44px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 32px;\n  }\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: var(--basic-white);\n  text-shadow: 3px 0px 7px rgba(85, 85, 85, 0.8),\n    -3px 0px 7px rgba(85, 85, 85, 0.8), 0px 4px 7px rgba(85, 85, 85, 0.8);\n\n  @media screen and (max-width: 1279px) {\n    font-size: 20px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  margin: 0 auto 16px auto;\n\n  @media screen and (max-width: 1279px) {\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Error = styled.p`\n  font-size: 20px;\n  margin: 24px 0;\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 52px;\n  width: 100%;\n  height: 480px;\n  background: linear-gradient(to top, #082925b2 40%, #0c403b79 100%),\n    center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n\n  @media screen and (max-width: 639px) {\n    gap: 32px;\n  }\n`;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `/movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ImagesList","_templateObject2","ImagesItem","_templateObject3","ModalContainer","Image","Backdrop","CloseBtn","_templateObject4","CloseIcon","IoMdClose","_templateObject5","modalRoot","document","querySelector","ImageModal","_ref","currentImage","closeModal","useEffect","handleCloseByEsc","e","code","window","addEventListener","removeEventListener","createPortal","_jsx","onClick","target","currentTarget","children","_jsxs","type","src","concat","alt","movieId","useParams","_useState","useState","_useState2","_slicedToArray","images","setImages","_useState3","_useState4","error","setError","_useState5","_useState6","isModalOpen","setIsModalOpen","_useState7","_useState8","setCurrentImage","fetchMoviesData","then","backdrops","length","map","item","file_path","catch","finally","scrollToAdditionalMenu","handleClick","dataset","path","image","Error","scroller","duration","smooth","offset","PageTitle","Info","Title","Hero","$heroImage","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","id","query","page","endpointByType","searchParams","response","_context","prev","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}