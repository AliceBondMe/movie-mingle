{"version":3,"file":"static/js/8.d4e65581.chunk.js","mappings":"sMAGaA,EAAOC,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6GAQhBC,GAAWH,EAAAA,EAAAA,SAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wIASvBI,EAAUN,EAAAA,QAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2PAcpBM,EAAQR,EAAAA,QAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,iKAUlBQ,EAAQV,EAAAA,QAAAA,GAASW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iCAIjBU,EAASZ,EAAAA,QAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,qXAWV,SAAAY,GAAS,OAAAA,EAANC,MAAmB,I,SCI5C,EArDmB,SAAHD,GAAoB,IAAdE,EAAMF,EAANE,OACdC,GAAWC,EAAAA,EAAAA,MAGXC,EAAc,CAClBC,KAAM,UACNC,MAAO,OACPC,IAAK,WAGP,OACEC,EAAAA,EAAAA,KAACxB,EAAI,CAAAyB,SACFR,EAAOS,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,KAAA,MAAAC,UACEG,EAAAA,EAAAA,MAACxB,EAAQ,CACPyB,GACwB,MAAtBX,EAASY,SAAgB,UAAAC,OAAaJ,EAAMK,IAAE,GAAAD,OAAQJ,EAAMK,IAE9DC,MAAO,CAAEC,KAAMhB,GAAWO,SAAA,EAE1BD,EAAAA,EAAAA,KAACjB,EAAO,CAAAkB,UACND,EAAAA,EAAAA,KAACf,EAAK,CACJ0B,IACER,EAAMS,YAAW,GAAAL,OArBb,8BAsBc,QAAAA,OAAOJ,EAAMS,aAC3B,0EAENC,IAAKV,EAAMW,WAGfd,EAAAA,EAAAA,KAACb,EAAK,CAAAc,SAAEE,EAAMW,SACdd,EAAAA,EAAAA,KAAA,KAAAC,SACGE,EAAMY,aACH,IAAIC,KAAKb,EAAMY,cAAcE,mBAC3B,QACArB,GAEF,MAENI,EAAAA,EAAAA,KAACX,EAAM,CACLG,OAAQ0B,EAAkBC,KAAKC,MAA2B,GAArBjB,EAAMkB,eAAoBpB,SAEvC,IAAvBE,EAAMkB,aACH,KAAI,GAAAd,OACDY,KAAKC,MAA2B,GAArBjB,EAAMkB,cAAkB,WA/BvClB,EAAMK,GAkCV,KAIb,EAIA,SAASU,EAAkBI,GACzB,IAAIC,EAUJ,OATKD,EAEMA,EAAS,GAClBC,EAAQ,MACCD,EAAS,GAClBC,EAAQ,SACCD,GAAU,KACnBC,EAAQ,SANRA,EAAQ,OAQHA,CACT,C,yLC3EaC,EAAY/C,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8EAMrB8C,EAAOhD,EAAAA,QAAAA,EAAQK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oGAOfQ,EAAQV,EAAAA,QAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8DAKjB+C,EAAQjD,EAAAA,QAAAA,EAAQS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,iDAKhBgD,EAAOlD,EAAAA,QAAAA,QAAcW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,oiBAIW,SAAAY,GAAa,OAAAA,EAAVqC,UAA2B,G,qJCzB9DC,GAAapD,EAAAA,EAAAA,SAAOqD,EAAAA,GAAPrD,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2NAYzBoD,EAAmBtD,EAAAA,QAAAA,OAAaK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8UAqBhCqD,GAAYvD,EAAAA,EAAAA,SAAOwD,EAAAA,IAAPxD,CAAgBO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8DAM5BuD,EAAczD,EAAAA,QAAAA,KAAWS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,+LAYzBwD,GAAc1D,EAAAA,EAAAA,SAAO2D,EAAAA,GAAP3D,CAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8O,SC9C3B0D,EAAY,SAAH9C,GAA+C,IAAzC+C,EAAY/C,EAAZ+C,aAAcC,EAAYhD,EAAZgD,aAAcC,EAAKjD,EAALiD,MACtD,OACExC,EAAAA,EAAAA,KAAAyC,EAAAA,SAAA,CAAAxC,UACED,EAAAA,EAAAA,KAAC0C,EAAAA,GAAM,CAACC,cAAe,CAAEC,YAAa,IAAMC,SAAUP,EAAarC,UACjEG,EAAAA,EAAAA,MAACyB,EAAU,CAAA5B,SAAA,EACTD,EAAAA,EAAAA,KAACmC,EAAW,CACVW,MAAON,EACPO,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,SAAUb,KAGZnC,EAAAA,EAAAA,MAAC2B,EAAgB,CAACiB,KAAK,SAAQ/C,SAAA,EAC7BD,EAAAA,EAAAA,KAACgC,EAAS,KACVhC,EAAAA,EAAAA,KAACkC,EAAW,CAAAjC,SAAC,oBAMzB,E,wCC9BaoD,EAAO5E,EAAAA,QAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAOjB8C,EAAOhD,EAAAA,QAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kDCPhB2E,EAAS7E,EAAAA,QAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6UASb,SAAAY,GAAa,OAAAA,EAAVgE,WAA+B,UAAY,SAAS,IAShEC,EAAc/E,EAAAA,QAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,4DClBvB8E,EAAQ,SAAHlE,GAAuD,IAAjDmE,EAAWnE,EAAXmE,YAAaC,EAAepE,EAAfoE,gBAAiBC,EAAWrE,EAAXqE,YACpD,OACE5D,EAAAA,EAAAA,KAACwD,EAAW,CAAAvD,SACTyD,EAAYxD,KAAI,SAAC2D,EAAMC,GAAG,OACzB9D,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACsD,EAAM,CAACS,QAASJ,EAAiBJ,WAAYK,IAAgBC,EAAK5D,SAChE4D,KAFIA,EAIJ,KAIb,E,UCwFA,EA5FmB,WACjB,IAAAG,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BxB,EAAK0B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCjF,EAAMkF,EAAA,GAAEC,EAASD,EAAA,GACxBE,GAA0BZ,EAAAA,EAAAA,UAAS,IAAGa,GAAAX,EAAAA,EAAAA,GAAAU,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0BhB,EAAAA,EAAAA,UAAS,GAAEiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAsCpB,EAAAA,EAAAA,UAAS,GAAEqB,GAAAnB,EAAAA,EAAAA,GAAAkB,EAAA,GAA1CzB,EAAW0B,EAAA,GAAEC,EAAcD,EAAA,GAClCE,GAAsCvB,EAAAA,EAAAA,UAAS,IAAGwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAA3C9B,EAAW+B,EAAA,GAAEC,EAAcD,EAAA,IAOlCE,EAAAA,EAAAA,YAAU,WACR,IAAM7C,EAAQ0B,EAAaoB,IAAI,SAC3B9C,GACFsB,EAAStB,EAEb,GAAG,CAAC0B,KAcJmB,EAAAA,EAAAA,YAAU,WACR,IAAME,EAAWrB,EAAaoB,IAAI,SAC5BE,EAAUC,OAAOvB,EAAaoB,IAAI,SACxCL,EAAeO,GAEVD,IAELG,EAAAA,EAAAA,GAAgB,gBAAiB,EAAGH,EAAUC,GAC3CG,MAAK,SAAAC,GAA+B,IAA5BC,EAAOD,EAAPC,QAASC,EAAWF,EAAXE,YAChB,IAAKD,EAAQE,OAKX,OAJArB,EAAS,uCAADzE,OACiCsF,EAASS,cAAa,8BAE/DZ,EAAe,IAGjBd,EAAUuB,GACVf,EAASgB,GACTpB,EAAS,IACT,IAAMuB,EC9DoB,SAACpB,EAAOvB,GACxC,GAAIuB,EAAQ,EAAG,CAEb,IADA,IAAIqB,EAAM,GACDC,EAAI,EAAGA,GAAKtB,EAAOsB,GAAK,EAC/BD,EAAG,GAAAjG,QAAAmG,EAAAA,EAAAA,GAAOF,GAAG,CAAEC,IAEjB,OAAOD,CACT,CAEA,GAAIrB,GAAS,EAAG,CACd,IAAIqB,GAAGE,EAAAA,EAAAA,GACF,IAAIC,IACL,CAAC,EAAG/C,EAAc,EAAGA,EAAaA,EAAc,EAAGuB,GAAOyB,QACxD,SAAAH,GAAC,OAAIA,EAAI,GAAKA,GAAKtB,CAAK,MAI9B,OAAOqB,CACT,CACF,CD2CkCK,CAAmBT,EAAaN,GAC1DJ,EAAea,EACjB,IACCO,OAAM,WACL9B,EACE,qEAEFU,EAAe,GACjB,GACJ,GAAG,CAAClB,EAAchC,IAQlB,OACEpC,EAAAA,EAAAA,MAACiD,EAAI,CAAApD,SAAA,EACHG,EAAAA,EAAAA,MAACqB,EAAI,CAAAxB,SAAA,CAAC,0CACkCD,EAAAA,EAAAA,KAAA,SAAM,+DAG9CA,EAAAA,EAAAA,KAACqC,EAAS,CACRC,aAvDe,WACnB,GAAc,KAAVE,EAGF,OAFAwC,EAAS,uCACTU,EAAe,IAGjBjB,EAAgB,CAAEjC,MAAOA,EAAOqB,KAAM,IACtCmB,EAAS,IACTO,EAAe,GACfX,EAAU,GACZ,EA8CMrC,aApEe,SAAHhD,GAA+B,IAAfuD,EAAKvD,EAAfwH,OAAUjE,MAC3BA,GAAO2B,EAAgB,CAAC,GAC7BL,EAAStB,EACX,EAkEMN,MAAOA,IAEE,KAAVuC,GAAe/E,EAAAA,EAAAA,KAACgH,EAAAA,EAAU,CAACvH,OAAQA,KAAaO,EAAAA,EAAAA,KAAC0B,EAAAA,GAAK,CAAAzB,SAAE8E,IACxDI,EAAQ,IACPnF,EAAAA,EAAAA,KAACyD,EAAK,CACJC,YAAaA,EACbC,gBArBgB,SAAAsD,GACtB,IAAM3F,EAASyE,OAAOkB,EAAMF,OAAOG,WACnC3B,EAAejE,GACfmD,EAAgB,CAAEjC,MAAOA,EAAOqB,KAAMvC,GACxC,EAkBQsC,YAAaA,MAKvB,C,iGElGMuD,EAAU,mCACVC,EAAW,+BAEV,SAAepB,EAAeqB,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAuBpC,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAvBM,SAAAC,EAA+B9E,EAAMxC,EAAIgC,EAAOqB,GAAI,IAAAkE,EAAAvD,EAAAwD,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAevD,OAdIJ,EAAiB,CACrBK,SAAU,sBACVC,UAAU,UAAD9H,OAAYC,GACrB8H,cAAe,gBACfC,aAAa,UAADhI,OAAYC,EAAE,WAC1BgI,KAAK,UAADjI,OAAYC,EAAE,YAClBiI,QAAQ,UAADlI,OAAYC,EAAE,YACrBkI,MAAM,SAADnI,OAAWC,EAAE,YAGdgE,EAAe,IAAImE,gBAAgB,CACvCnG,MAAOA,EACPoG,eAAe,EACf/E,KAAMA,IACNoE,EAAAE,KAAA,EAEqBU,EAAAA,EAAAA,IAAU,GAADtI,OAC3B6G,GAAQ7G,OAAGwH,EAAe/E,GAAK,aAAAzC,OAAY4G,EAAO,KAAA5G,OAC1C,kBAATyC,EAA2BwB,EAAe,KAE5C,KAAD,EAJa,OAARwD,EAAQC,EAAAa,KAAAb,EAAAc,OAAA,SAKPf,EAASgB,MAAI,wBAAAf,EAAAgB,OAAA,GAAAnB,EAAA,MACrBJ,MAAA,KAAAC,UAAA,C","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","components/Pages/Pages.styled.jsx","components/Pages/Pages.jsx","pages/MoviesPage/MoviesPage.jsx","services/createPagesButtons.js","services/tmdb-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  color: #113835;\n`;\n\nexport const CardLink = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n`;\n\nexport const ImgWrap = styled.div`\n  margin: 0 auto;\n  border-radius: 8px;\n  width: 200px;\n  height: 268px;\n  display: flex;\n  align-content: center;\n  overflow: hidden;\n  transition: all 300ms ease-in-out;\n  &:hover {\n    box-shadow: 0px 0px 10px 4px #113835;\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform 300ms ease-in-out;\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid #ffffff;\n  background-color: ${({ $color }) => $color};\n  color: #ffffff;\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  CardLink,\n  Image,\n  ImgWrap,\n  List,\n  Rating,\n  Title,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <CardLink\n            to={\n              location.pathname === '/' ? `movies/${movie.id}` : `${movie.id}`\n            }\n            state={{ from: location }}\n          >\n            <ImgWrap>\n              <Image\n                src={\n                  movie.poster_path\n                    ? `${POSTERS_URL}w200${movie.poster_path}`\n                    : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n                }\n                alt={movie.title}\n              />\n            </ImgWrap>\n            <Title>{movie.title}</Title>\n            <p>\n              {movie.release_date\n                ? new Date(movie.release_date).toLocaleDateString(\n                    'en-US',\n                    dateOptions\n                  )\n                : ''}\n            </p>\n            <Rating\n              $color={ratingColorDetect(Math.round(movie.vote_average * 10))}\n            >\n              {movie.vote_average === 0\n                ? 'NR'\n                : `${Math.round(movie.vote_average * 10)}%`}\n            </Rating>\n          </CardLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n\nfunction ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = 'grey';\n  } else if (number < 50) {\n    color = 'red';\n  } else if (number < 70) {\n    color = 'orange';\n  } else if (number >= 70) {\n    color = 'green';\n  }\n  return color;\n}\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  margin-bottom: 12px;\n  color: #e4f8f1d3;\n`;\n\nexport const Info = styled.p`\n  width: 800px;\n  text-align: center;\n  margin: 0 auto 24px auto;\n  color: #e4f8f1d3;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  margin: 0 auto 16px auto;\n`;\n\nexport const Error = styled.p`\n  font-size: 24px;\n  margin: 24px 0;\n`;\n\nexport const Hero = styled.section`\n  position: relative;\n  width: 100%;\n  height: 500px;\n  background: center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n  box-shadow: inset 0px 0px 5px 0px #e4f8f1d3, inset 0px 0px 20px 0px #e4f8f1d3;\n  &:after {\n    content: '';\n    display: block;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: transparent;\n    background-image: linear-gradient(\n      0deg,\n      rgba(17, 17, 17, 0.163) 0%,\n      rgba(17, 17, 17, 0.163) 100%\n    );\n  }\n`;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchForm = styled(Form)`\n  margin: 0 auto 24px auto;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 1px solid #113835;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background-color: #e4f8f1d3;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n`;\n\nexport const ButtonImg = styled(BsSearch)`\n  width: 36px;\n  height: 36px;\n  color: #0b615a;\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  SearchForm,\n  SearchFormButton,\n  ButtonLabel,\n  SearchInput,\n  ButtonImg,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ handleSearch, handleChange, query }) => {\n  return (\n    <>\n      <Formik initialValues={{ searchQuery: '' }} onSubmit={handleSearch}>\n        <SearchForm>\n          <SearchInput\n            value={query}\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            onChange={handleChange}\n          />\n\n          <SearchFormButton type=\"submit\">\n            <ButtonImg />\n            <ButtonLabel>Search</ButtonLabel>\n          </SearchFormButton>\n        </SearchForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n`;\n\nexport const Info = styled.h3`\n  width: 800px;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  font-family: inherit;\n  font-size: inherit;\n  line-height: 32px;\n  color: #e4f8f1d3;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 300ms ease-in-out;\n  background-color: ${({ $underline }) => ($underline ? '#26645f' : '#30877e')};\n\n  &:hover {\n    background-color: #e4f8f1d3;\n    color: #30877e;\n    outline: 1px solid #30877e;\n  }\n`;\n\nexport const ButtonsList = styled.ul`\n  margin: 0 auto;\n  display: flex;\n  gap: 4px;\n`;\n","import { Button, ButtonsList } from './Pages.styled';\n\nexport const Pages = ({ pagesToShow, handlePageClick, currentPage }) => {\n  return (\n    <ButtonsList>\n      {pagesToShow.map((page, idx) => (\n        <li key={page}>\n          <Button onClick={handlePageClick} $underline={currentPage === page}>\n            {page}\n          </Button>\n        </li>\n      ))}\n    </ButtonsList>\n  );\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Error } from 'pages/HomePage/HomePage.styled';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Info, Wrap } from './MoviesPage.styled';\nimport { Pages } from 'components/Pages/Pages';\nimport { createPagesButtons } from 'services/createPagesButtons';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagesToShow, setPagesToShow] = useState([]);\n\n  const handleChange = ({ target: { value } }) => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n\n  useEffect(() => {\n    const value = searchParams.get('query');\n    if (value) {\n      setQuery(value);\n    }\n  }, [searchParams]);\n\n  const handleSearch = () => {\n    if (query === '') {\n      setError('Please enter your search query');\n      setPagesToShow([]);\n      return;\n    }\n    setSearchParams({ query: query, page: 1 });\n    setError('');\n    setCurrentPage(1);\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    const urlQuery = searchParams.get('query');\n    const urlPage = Number(searchParams.get('page'));\n    setCurrentPage(urlPage);\n\n    if (!urlQuery) return;\n\n    fetchMoviesData('searchByQuery', 0, urlQuery, urlPage)\n      .then(({ results, total_pages }) => {\n        if (!results.length) {\n          setError(\n            `We couldn't find movies, mentioning ${urlQuery.toUpperCase()}. Try something else`\n          );\n          setPagesToShow([]);\n          return;\n        }\n        setMovies(results);\n        setPages(total_pages);\n        setError('');\n        const pagesButtonsArray = createPagesButtons(total_pages, urlPage);\n        setPagesToShow(pagesButtonsArray);\n      })\n      .catch(() => {\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        );\n        setPagesToShow([]);\n      });\n  }, [searchParams, query]);\n\n  const handlePageClick = event => {\n    const number = Number(event.target.innerText);\n    setCurrentPage(number);\n    setSearchParams({ query: query, page: number });\n  };\n\n  return (\n    <Wrap>\n      <Info>\n        Ready to explore the world of cinema? <br />\n        Simply enter your movie query, and let the magic unfold!\n      </Info>\n      <Searchbar\n        handleSearch={handleSearch}\n        handleChange={handleChange}\n        query={query}\n      />\n      {error === '' ? <MoviesList movies={movies} /> : <Error>{error}</Error>}\n      {pages > 1 && (\n        <Pages\n          pagesToShow={pagesToShow}\n          handlePageClick={handlePageClick}\n          currentPage={currentPage}\n        />\n      )}\n    </Wrap>\n  );\n};\n\nexport default MoviesPage;\n","export const createPagesButtons = (pages, currentPage) => {\n  if (pages < 5) {\n    let arr = [];\n    for (let i = 1; i <= pages; i += 1) {\n      arr = [...arr, i];\n    }\n    return arr;\n  }\n\n  if (pages >= 5) {\n    let arr = [\n      ...new Set(\n        [1, currentPage - 1, currentPage, currentPage + 1, pages].filter(\n          i => i > 0 && i <= pages\n        )\n      ),\n    ];\n    return arr;\n  }\n};\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","CardLink","Link","_templateObject2","ImgWrap","_templateObject3","Image","_templateObject4","Title","_templateObject5","Rating","_templateObject6","_ref","$color","movies","location","useLocation","dateOptions","year","month","day","_jsx","children","map","movie","_jsxs","to","pathname","concat","id","state","from","src","poster_path","alt","title","release_date","Date","toLocaleDateString","ratingColorDetect","Math","round","vote_average","number","color","PageTitle","Info","Error","Hero","$heroImage","SearchForm","Form","SearchFormButton","ButtonImg","BsSearch","ButtonLabel","SearchInput","Field","Searchbar","handleSearch","handleChange","query","_Fragment","Formik","initialValues","searchQuery","onSubmit","value","name","type","autoComplete","autoFocus","placeholder","onChange","Wrap","Button","$underline","ButtonsList","Pages","pagesToShow","handlePageClick","currentPage","page","idx","onClick","_useState","useState","_useState2","_slicedToArray","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","setMovies","_useState5","_useState6","error","setError","_useState7","_useState8","pages","setPages","_useState9","_useState10","setCurrentPage","_useState11","_useState12","setPagesToShow","useEffect","get","urlQuery","urlPage","Number","fetchMoviesData","then","_ref2","results","total_pages","length","toUpperCase","pagesButtonsArray","arr","i","_toConsumableArray","Set","filter","createPagesButtons","catch","target","MoviesList","event","innerText","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endpointByType","response","_context","prev","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","image","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}