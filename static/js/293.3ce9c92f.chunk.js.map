{"version":3,"file":"static/js/293.3ce9c92f.chunk.js","mappings":"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","sources":["pages/HomePage/HomePage.styled.jsx","components/YouTubeEmbed/YouTubeEmbed.styled.jsx","components/YouTubeEmbed/YouTubeEmbed.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  color: var(--basic-white);\n  font-size: 60px;\n  line-height: 80px;\n  text-shadow: 0px 11px 10px #082925b2;\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: var(--basic-white);\n  text-shadow: 3px 0px 7px rgba(85, 85, 85, 0.8),\n    -3px 0px 7px rgba(85, 85, 85, 0.8), 0px 4px 7px rgba(85, 85, 85, 0.8);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  margin: 0 auto 16px auto;\n`;\n\nexport const Error = styled.p`\n  font-size: 24px;\n  margin: 24px 0;\n`;\n\nexport const Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 52px;\n  width: 100%;\n  height: 480px;\n  background: linear-gradient(to top, #082925b2 40%, #0c403b79 100%),\n    center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n`;\n","import styled from 'styled-components';\n\nexport const Video = styled.div`\n  margin-top: 20px;\n  overflow: hidden;\n  padding-bottom: 56.25%;\n  position: relative;\n  height: 0;\n`;\n\nexport const Iframe = styled.iframe`\n  left: 0;\n  top: 0;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n`;\n","import { Iframe, Video } from './YouTubeEmbed.styled';\n\nexport const YoutubeEmbed = ({ embedId }) => (\n  <Video>\n    <Iframe\n      width=\"853\"\n      height=\"480\"\n      src={`https://www.youtube.com/embed/${embedId}`}\n      frameBorder=\"0\"\n      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen\n      title=\"Embedded youtube\"\n    />\n  </Video>\n);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 40px;\n  margin-bottom: 24px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n  text-shadow: 0px 6px 8px rgba(78, 78, 78, 0.8);\n`;\n\nexport const Information = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 700px;\n`;\n\nexport const LineHeader = styled.span`\n  display: inline-flex;\n  align-items: center;\n  margin-right: 8px;\n  border-radius: 16px 0 0 16px;\n  height: 32px;\n  width: 120px;\n  padding: 0 5% 0 20px;\n  color: var(--basic-white);\n  background: linear-gradient(\n    to right,\n    var(--accent) 80%,\n    var(--basic-light) 100%\n  );\n  font-weight: bold;\n`;\n\nexport const Poster = styled.img`\n  height: 680px;\n  width: auto;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\n","import { YoutubeEmbed } from 'components/YouTubeEmbed/YouTubeEmbed';\nimport {\n  Container,\n  Information,\n  LineHeader,\n  Poster,\n  Title,\n} from './MovieInfo.styled';\n\nconst POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\nconst dateOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n\nconst MovieInfo = ({ movieData, movieTeaser }) => {\n  return (\n    <Container>\n      <Poster\n        src={\n          movieData.poster_path\n            ? `${POSTERS_URL}w500${movieData.poster_path}`\n            : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n        }\n        alt={movieData.title}\n      />\n      <Information>\n        <Title>{`${movieData.title} (${\n          movieData.release_date\n            ? new Date(movieData.release_date).getFullYear()\n            : ''\n        })`}</Title>\n        <p>\n          <LineHeader>Release date</LineHeader>{' '}\n          {new Date(movieData.release_date).toLocaleDateString(\n            'en-US',\n            dateOptions\n          )}\n        </p>\n        <p>\n          <LineHeader>Rating</LineHeader>\n          {movieData.vote_average === 0\n            ? 'Not rated'\n            : `${Math.round(movieData.vote_average * 10)}%`}\n        </p>\n        <p>\n          <LineHeader>Genres</LineHeader>{' '}\n          {movieData.genres.map(({ name }) => name).join(', ') || '-'}\n        </p>\n        <p>\n          <LineHeader>Promo</LineHeader> {movieData.tagline || '-'}\n        </p>\n        <p>\n          <LineHeader>Overview</LineHeader> {movieData.overview || '-'}\n        </p>\n\n        {movieTeaser && <YoutubeEmbed embedId={movieTeaser} />}\n      </Information>\n    </Container>\n  );\n};\nexport default MovieInfo;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const AdditionalNav = styled.div`\n  display: flex;\n  gap: 40px;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 32px;\n  background-color: var(--accent);\n  align-items: bottom;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: var(--basic-white);\n  cursor: pointer;\n\n  &.active {\n    text-decoration: underline;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 16px 0 0 16px;\n  height: 32px;\n  padding: 0 10% 0 4px;\n  color: var(--basic-white);\n  background: linear-gradient(\n    to right,\n    var(--accent) 70%,\n    var(--basic-light) 100%\n  );\n  font-weight: bold;\n  transition: all var(--basic-transition);\n\n  &:hover {\n    transform: translateX(-10px);\n    background: linear-gradient(\n      to right,\n      var(--additional) 70%,\n      var(--basic-light) 100%\n    );\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { MdOutlineKeyboardDoubleArrowLeft } from 'react-icons/md';\n\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Error } from 'pages/HomePage/HomePage.styled';\nimport {\n  AdditionalNav,\n  BackLink,\n  Container,\n  NavLinkStyled,\n  NavList,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [video, setVideo] = useState(null);\n  const [error, setError] = useState('');\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMoviesData('movieById', Number(movieId))\n      .then(results => {\n        setMovieData(results);\n        setError('');\n      })\n      .catch(err => {\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later. You will be automatically redirected to Home page.'\n        );\n        setTimeout(() => {\n          navigate('/');\n        }, 2000);\n      });\n    fetchMoviesData('searchVideos', Number(movieId))\n      .then(({ results }) => {\n        const teaserId = results.findIndex(\n          result => result.type === 'Teaser' || result.type === 'Trailer'\n        );\n        if (teaserId !== -1) {\n          setVideo(results[teaserId].key);\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, [movieId, navigate]);\n\n  return (\n    <Container>\n      <BackLink to={state?.from ?? '/'}>\n        <MdOutlineKeyboardDoubleArrowLeft />\n        Go back\n      </BackLink>\n\n      {error === '' && movieData ? (\n        <>\n          <MovieInfo movieData={movieData} movieTeaser={video} />\n\n          <AdditionalNav>\n            <NavList>\n              <li>\n                <NavLinkStyled to=\"cast\" state={{ from: state?.from }}>\n                  Cast\n                </NavLinkStyled>\n              </li>\n              <li>\n                <NavLinkStyled to=\"reviews\" state={{ from: state?.from }}>\n                  Reviews\n                </NavLinkStyled>\n              </li>\n            </NavList>\n          </AdditionalNav>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <Error>{error}</Error>\n      )}\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["PageTitle","styled","_templateObject","_taggedTemplateLiteral","Info","_templateObject2","Title","_templateObject3","Error","_templateObject4","Hero","_templateObject5","_ref","$heroImage","Video","Iframe","YoutubeEmbed","embedId","_jsx","children","width","height","src","concat","frameBorder","allow","allowFullScreen","title","Container","Information","LineHeader","Poster","dateOptions","year","month","day","movieData","movieTeaser","_jsxs","poster_path","alt","release_date","Date","getFullYear","toLocaleDateString","vote_average","Math","round","genres","map","_ref2","name","join","tagline","overview","AdditionalNav","NavList","NavLinkStyled","NavLink","BackLink","Link","_state$from","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovieData","_useState3","_useState4","video","setVideo","_useState5","_useState6","error","setError","state","useLocation","navigate","useNavigate","useEffect","fetchMoviesData","Number","then","results","catch","err","setTimeout","teaserId","findIndex","result","type","key","console","log","to","from","MdOutlineKeyboardDoubleArrowLeft","_Fragment","MovieInfo","Suspense","fallback","Loader","Outlet","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","id","query","page","endpointByType","searchParams","response","_context","prev","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","image","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}