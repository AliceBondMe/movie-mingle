{"version":3,"file":"static/js/680.638fd568.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MovieItem/MovieItem.styled.jsx","helpers/ratingColorDetect.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.jsx","services/tmdb-api.js"],"sourcesContent":["import { fadeIn } from 'GlobalStyle';\n\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  animation: ${fadeIn} 700ms ease-in-out;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CardLink = styled(Link)`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n`;\n\nexport const ImgWrap = styled.div`\n  margin: 0 auto 8px auto;\n  border-radius: 8px;\n  width: 200px;\n  height: 268px;\n  display: flex;\n  align-content: center;\n  overflow: hidden;\n  transition: all var(--basic-transition);\n  &:hover {\n    box-shadow: 0px 0px 16px 4px var(--basic-dark);\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform var(--basic-transition);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 16px;\n  right: 28px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid var(--basic-white);\n  background-color: ${({ $color }) => $color};\n  color: var(--basic-white);\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","export function ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = '#959393';\n  } else if (number < 50) {\n    color = '#ce3030';\n  } else if (number < 70) {\n    color = '#e9ad3d';\n  } else if (number >= 70) {\n    color = '#437d33';\n  }\n  return color;\n}\n","import { useLocation } from 'react-router-dom';\nimport { CardLink, Image, ImgWrap, Rating, Title } from './MovieItem.styled';\nimport { ratingColorDetect } from 'helpers/ratingColorDetect';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <li>\n      <CardLink\n        to={\n          location.pathname === '/' || location.pathname === '/watchlist'\n            ? `/movies/${movie.id}`\n            : `${movie.id}`\n        }\n        state={{ from: location }}\n      >\n        <ImgWrap>\n          <Image\n            src={\n              movie.poster_path\n                ? `${POSTERS_URL}w300${movie.poster_path}`\n                : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n            }\n            alt={movie.title}\n          />\n        </ImgWrap>\n        <Title>{movie.title}</Title>\n        <p>\n          {movie.release_date\n            ? new Date(movie.release_date).toLocaleDateString(\n                'en-US',\n                dateOptions\n              )\n            : ''}\n        </p>\n        <Rating $color={ratingColorDetect(Math.round(movie.vote_average * 10))}>\n          {movie.vote_average === 0\n            ? 'NR'\n            : `${Math.round(movie.vote_average * 10)}%`}\n        </Rating>\n      </CardLink>\n    </li>\n  );\n};\n","import { List } from './MoviesList.styled';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Error, Hero, Info, PageTitle, Title } from './HomePage.styled';\n\nconst IMAGE_PATH = 'https://image.tmdb.org/t/p/original/';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [heroImage, setHeroImage] = useState('');\n\n  useEffect(() => {\n    fetchMoviesData('trending')\n      .then(({ results }) => {\n        if (!results.length) {\n          setError(\n            'We are sorry, but something went wrong :( Please, try again later'\n          );\n          return;\n        }\n        setMovies(results);\n        setError('');\n        const randomIndex = Math.floor(Math.random() * results.length + 0);\n        setHeroImage(`${IMAGE_PATH}${results[randomIndex]?.backdrop_path}`);\n      })\n      .catch(() =>\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        )\n      );\n  }, []);\n\n  return (\n    <div>\n      <Hero $heroImage={heroImage}>\n        <PageTitle>\n          Welcome to MovieMingle - <br />\n          Your Gateway to Cinematic Excellence!\n        </PageTitle>\n        <Info>\n          Discover the latest and trending films or <br />\n          explore a world of movies tailored to your preferences. <br />\n          Whether you're in the mood for blockbuster hits or hidden gems, <br />\n          our powerful search engine has you covered.\n        </Info>\n      </Hero>\n      <Title>Popular today:</Title>\n      {error === '' ? <MoviesList movies={movies} /> : <Error>{error}</Error>}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  color: var(--basic-white);\n  font-size: 60px;\n  line-height: 80px;\n  text-shadow: 0px 11px 10px #082925b2;\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: var(--basic-white);\n  text-shadow: 3px 0px 7px rgba(85, 85, 85, 0.8),\n    -3px 0px 7px rgba(85, 85, 85, 0.8), 0px 4px 7px rgba(85, 85, 85, 0.8);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  margin: 0 auto 16px auto;\n`;\n\nexport const Error = styled.p`\n  font-size: 20px;\n  margin: 24px 0;\n`;\n\nexport const Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 52px;\n  width: 100%;\n  height: 480px;\n  background: linear-gradient(to top, #082925b2 40%, #0c403b79 100%),\n    center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n`;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `/movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","fadeIn","CardLink","Link","ImgWrap","_templateObject2","Image","_templateObject3","Title","_templateObject4","Rating","_templateObject5","_ref","$color","ratingColorDetect","number","color","MovieItem","movie","location","useLocation","_jsx","children","_jsxs","to","pathname","concat","id","state","from","src","poster_path","alt","title","release_date","Date","toLocaleDateString","year","month","day","Math","round","vote_average","movies","map","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","heroImage","setHeroImage","useEffect","fetchMoviesData","then","_results$randomIndex","results","length","randomIndex","floor","random","backdrop_path","catch","Hero","$heroImage","PageTitle","Info","MoviesList","Error","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","type","query","page","endpointByType","searchParams","response","_context","prev","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","image","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}