{"version":3,"file":"static/js/517.fc440b66.chunk.js","mappings":"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","sources":["pages/HomePage/HomePage.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/tmdb-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  text-align: center;\n  color: var(--basic-white);\n  font-size: 60px;\n  line-height: 80px;\n  text-shadow: 0px 11px 10px #082925b2;\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: var(--basic-white);\n  text-shadow: 3px 0px 7px rgba(85, 85, 85, 0.8),\n    -3px 0px 7px rgba(85, 85, 85, 0.8), 0px 4px 7px rgba(85, 85, 85, 0.8);\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  margin: 0 auto 16px auto;\n`;\n\nexport const Error = styled.p`\n  font-size: 20px;\n  margin: 24px 0;\n`;\n\nexport const Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 52px;\n  width: 100%;\n  height: 480px;\n  background: linear-gradient(to top, #082925b2 40%, #0c403b79 100%),\n    center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n`;\n","import { fadeIn } from 'GlobalStyle';\nimport { TbVideoMinus, TbVideoPlus } from 'react-icons/tb';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 40px;\n  padding: 24px;\n  animation: ${fadeIn} 700ms ease-in-out;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 16px;\n  text-shadow: 0px 6px 8px rgba(78, 78, 78, 0.8);\n`;\n\nexport const Information = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  width: 700px;\n`;\n\nexport const Paragraph = styled.p`\n  display: grid;\n  grid-template-columns: 175px 525px;\n  gap: 8px;\n  text-align: justify;\n`;\n\nexport const LineHeader = styled.span`\n  display: inline-flex;\n  align-items: center;\n  margin-right: 8px;\n  border-radius: 16px 0 0 16px;\n  height: 32px;\n  width: 120px;\n  padding: 0 35px 0 20px;\n  color: var(--basic-white);\n  background: linear-gradient(\n    to right,\n    var(--accent) 80%,\n    var(--basic-light) 100%\n  );\n  font-weight: bold;\n`;\n\nexport const Poster = styled.img`\n  height: 600px;\n  width: auto;\n  border-radius: 8px;\n  box-shadow: 0px 6px 8px rgba(78, 78, 78, 0.8);\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  background-color: var(--accent);\n  color: var(--basic-white);\n  border: none;\n  border-radius: 50%;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  cursor: pointer;\n`;\n\nexport const VideoPlus = styled(TbVideoPlus)`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const VideoMinus = styled(TbVideoMinus)`\n  width: 100%;\n  height: 100%;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  Information,\n  LineHeader,\n  Paragraph,\n  Poster,\n  Title,\n  VideoMinus,\n  VideoPlus,\n} from './MovieInfo.styled';\n\nconst POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\nconst dateOptions = {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n};\n\nconst MOVIES_KEY = 'moviesWatchlist';\n\nconst MovieInfo = ({ movieData }) => {\n  const [moviesToWatch, setMoviesToWatch] = useState(\n    JSON.parse(localStorage.getItem(MOVIES_KEY)) || []\n  );\n  const [isMovieSaved, setMovieSaved] = useState(false);\n\n  useEffect(() => {\n    const isSaved = moviesToWatch.find(({ id }) => id === movieData.id);\n    isSaved ? setMovieSaved(true) : setMovieSaved(false);\n  }, [movieData.id, moviesToWatch]);\n\n  useEffect(() => {\n    localStorage.setItem(MOVIES_KEY, JSON.stringify(moviesToWatch));\n  }, [moviesToWatch]);\n\n  const addMovieToWatchlist = () => {\n    setMoviesToWatch(prev => [...prev, movieData]);\n  };\n\n  const removeMovieFromWatchlist = () => {\n    setMoviesToWatch(prev => prev.filter(({ id }) => id !== movieData.id));\n  };\n\n  return (\n    <Container>\n      <Poster\n        src={\n          movieData.poster_path\n            ? `${POSTERS_URL}w500${movieData.poster_path}`\n            : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n        }\n        alt={movieData.title}\n      />\n      <Information>\n        <Title>{`${movieData.title} (${\n          movieData.release_date\n            ? new Date(movieData.release_date).getFullYear()\n            : ''\n        })`}</Title>\n\n        {isMovieSaved ? (\n          <Button\n            type=\"button\"\n            aria-label=\"remove from watchlist\"\n            onClick={removeMovieFromWatchlist}\n          >\n            <VideoMinus />\n          </Button>\n        ) : (\n          <Button\n            type=\"button\"\n            aria-label=\"add to watchlist\"\n            onClick={addMovieToWatchlist}\n          >\n            <VideoPlus />\n          </Button>\n        )}\n\n        {movieData.title !== movieData.original_title && (\n          <Paragraph>\n            <LineHeader>Original Title</LineHeader> {movieData.original_title}\n          </Paragraph>\n        )}\n\n        {movieData.production_countries &&\n          movieData.production_countries.length !== 0 && (\n            <Paragraph>\n              <LineHeader>Production</LineHeader>{' '}\n              {movieData.production_countries\n                .map(({ name }) => name)\n                .join(', ')}\n            </Paragraph>\n          )}\n\n        {movieData.release_date && (\n          <Paragraph>\n            <LineHeader>Release date</LineHeader>{' '}\n            {new Date(movieData.release_date).toLocaleDateString(\n              'en-US',\n              dateOptions\n            )}\n          </Paragraph>\n        )}\n\n        <Paragraph>\n          <LineHeader>Rating</LineHeader>\n          {movieData.vote_average === 0\n            ? 'Not rated'\n            : `${Math.round(movieData.vote_average * 10)}%`}\n          {movieData.vote_count === 0\n            ? ''\n            : ` ( ${movieData.vote_count} votes)`}\n        </Paragraph>\n\n        {movieData.genres && movieData.genres.length !== 0 && (\n          <Paragraph>\n            <LineHeader>Genres</LineHeader>{' '}\n            {movieData.genres.map(({ name }) => name).join(', ')}\n          </Paragraph>\n        )}\n\n        {movieData.runtime && (\n          <Paragraph>\n            <LineHeader>Duration</LineHeader>\n            {movieData.runtime < 60\n              ? `${movieData.runtime}m`\n              : `${Math.floor(movieData.runtime / 60)}h ${Math.floor(\n                  movieData.runtime % 60\n                )}m`}\n          </Paragraph>\n        )}\n\n        {movieData.tagline && (\n          <Paragraph>\n            <LineHeader>Promo</LineHeader> {movieData.tagline}\n          </Paragraph>\n        )}\n\n        {movieData.overview && (\n          <Paragraph>\n            <LineHeader>Overview</LineHeader> {movieData.overview}\n          </Paragraph>\n        )}\n      </Information>\n    </Container>\n  );\n};\nexport default MovieInfo;\n","import { Link, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px;\n`;\n\nexport const AdditionalNav = styled.div`\n  display: flex;\n  gap: 40px;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 32px;\n  background-color: var(--accent);\n  align-items: bottom;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: var(--basic-white);\n  cursor: pointer;\n\n  &.active {\n    text-decoration: underline;\n  }\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 16px 0 0 16px;\n  height: 32px;\n  padding: 0 10% 0 4px;\n  color: var(--basic-white);\n  background: linear-gradient(\n    to right,\n    var(--accent) 70%,\n    var(--basic-light) 100%\n  );\n  font-weight: bold;\n  transition: all var(--basic-transition);\n\n  &:hover {\n    transform: translateX(-10px);\n    background: linear-gradient(\n      to right,\n      var(--additional) 70%,\n      var(--basic-light) 100%\n    );\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { MdOutlineKeyboardDoubleArrowLeft } from 'react-icons/md';\n\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport { Error } from 'pages/HomePage/HomePage.styled';\nimport {\n  AdditionalNav,\n  BackLink,\n  Container,\n  NavLinkStyled,\n  NavList,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [error, setError] = useState('');\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMoviesData('movieById', Number(movieId))\n      .then(results => {\n        setMovieData(results);\n        setError('');\n      })\n      .catch(err => {\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later. You will be automatically redirected to Home page.'\n        );\n        setTimeout(() => {\n          navigate('/');\n        }, 2000);\n      });\n  }, [movieId, navigate]);\n\n  return (\n    <Container>\n      <BackLink to={state?.from ?? '/'}>\n        <MdOutlineKeyboardDoubleArrowLeft />\n        Go back\n      </BackLink>\n\n      {error === '' && movieData ? (\n        <>\n          <MovieInfo movieData={movieData} />\n\n          <AdditionalNav name=\"myScrollToElement\">\n            <NavList>\n              <li>\n                <NavLinkStyled to=\"trailer\" state={{ from: state?.from }}>\n                  Trailer\n                </NavLinkStyled>\n              </li>\n              <li>\n                <NavLinkStyled to=\"photos\" state={{ from: state?.from }}>\n                  Photos\n                </NavLinkStyled>\n              </li>\n              <li>\n                <NavLinkStyled to=\"cast\" state={{ from: state?.from }}>\n                  Cast\n                </NavLinkStyled>\n              </li>\n              <li>\n                <NavLinkStyled to=\"reviews\" state={{ from: state?.from }}>\n                  Reviews\n                </NavLinkStyled>\n              </li>\n            </NavList>\n          </AdditionalNav>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <Error>{error}</Error>\n      )}\n    </Container>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `/movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["PageTitle","styled","_templateObject","_taggedTemplateLiteral","Info","_templateObject2","Title","_templateObject3","Error","_templateObject4","Hero","_templateObject5","_ref","$heroImage","Container","fadeIn","Information","Paragraph","LineHeader","Poster","_templateObject6","Button","_templateObject7","VideoPlus","TbVideoPlus","_templateObject8","VideoMinus","TbVideoMinus","_templateObject9","dateOptions","year","month","day","MOVIES_KEY","movieData","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","moviesToWatch","setMoviesToWatch","_useState3","_useState4","isMovieSaved","setMovieSaved","useEffect","isSaved","find","_ref2","id","setItem","stringify","_jsxs","children","_jsx","src","poster_path","concat","alt","title","release_date","Date","getFullYear","type","onClick","prev","filter","_ref3","_toConsumableArray","original_title","production_countries","length","map","_ref4","name","join","toLocaleDateString","vote_average","Math","round","vote_count","genres","_ref5","runtime","floor","tagline","overview","AdditionalNav","NavList","NavLinkStyled","NavLink","BackLink","Link","_state$from","movieId","useParams","setMovieData","error","setError","state","useLocation","navigate","useNavigate","fetchMoviesData","Number","then","results","catch","err","setTimeout","to","from","MdOutlineKeyboardDoubleArrowLeft","_Fragment","MovieInfo","Suspense","fallback","Loader","Outlet","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","query","page","endpointByType","searchParams","response","_context","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","image","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}