{"version":3,"file":"static/js/680.8c9153e0.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MovieItem/MovieItem.styled.jsx","helpers/ratingColorDetect.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/WatchlistButton/WatchlistButton.styled.jsx","components/WatchlistButton/WatchlistButton.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.jsx","services/tmdb-api.js"],"sourcesContent":["import { fadeIn } from 'GlobalStyle';\n\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  max-width: 1248px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  animation: ${fadeIn} 700ms ease-in-out;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  position: relative;\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const CardLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n`;\n\nexport const ImgWrap = styled.div`\n  margin: 0 auto 8px auto;\n  border-radius: 8px;\n  width: 200px;\n  height: 268px;\n  display: flex;\n  align-content: center;\n  overflow: hidden;\n  transition: all var(--basic-transition);\n  &:hover {\n    box-shadow: 0px 0px 16px 4px var(--basic-dark);\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform var(--basic-transition);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n\n  @media screen and (max-width: 639px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 232px;\n  left: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid var(--basic-white);\n  background-color: ${({ $color }) => $color};\n  color: var(--basic-white);\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","export function ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = '#959393';\n  } else if (number < 50) {\n    color = '#ce3030';\n  } else if (number < 70) {\n    color = '#e9ad3d';\n  } else if (number >= 70) {\n    color = '#437d33';\n  }\n  return color;\n}\n","import { useLocation } from 'react-router-dom';\nimport {\n  CardLink,\n  Image,\n  ImgWrap,\n  Item,\n  Rating,\n  Title,\n} from './MovieItem.styled';\nimport { ratingColorDetect } from 'helpers/ratingColorDetect';\nimport { WatchlistButton } from 'components/WatchlistButton/WatchlistButton';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <Item>\n      <CardLink\n        to={\n          location.pathname === '/' || location.pathname === '/watchlist'\n            ? `/movies/${movie.id}`\n            : `${movie.id}`\n        }\n        state={{ from: location }}\n      >\n        <ImgWrap>\n          <Image\n            src={\n              movie.poster_path\n                ? `${POSTERS_URL}w300${movie.poster_path}`\n                : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n            }\n            alt={movie.title}\n          />\n        </ImgWrap>\n        <Title>{movie.title}</Title>\n        <p>\n          {movie.release_date\n            ? new Date(movie.release_date).toLocaleDateString(\n                'en-US',\n                dateOptions\n              )\n            : ''}\n        </p>\n        <Rating $color={ratingColorDetect(Math.round(movie.vote_average * 10))}>\n          {movie.vote_average === 0\n            ? 'NR'\n            : `${Math.round(movie.vote_average * 10)}%`}\n        </Rating>\n      </CardLink>\n      <WatchlistButton movieData={movie} />\n    </Item>\n  );\n};\n","import { List } from './MoviesList.styled';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\nimport { TbVideoMinus, TbVideoPlus } from 'react-icons/tb';\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  background-color: var(--accent);\n  color: var(--basic-white);\n  border: none;\n  border-radius: 50%;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  cursor: pointer;\n`;\n\nexport const RemoveButton = styled(Button)`\n  background-color: var(--basic-gray);\n`;\n\nexport const VideoPlus = styled(TbVideoPlus)`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const VideoMinus = styled(TbVideoMinus)`\n  width: 100%;\n  height: 100%;\n`;\n","import { useContext, useEffect, useState } from 'react';\nimport {\n  Button,\n  RemoveButton,\n  VideoMinus,\n  VideoPlus,\n} from './WatchlistButton.styled';\nimport { WatchlistContext } from 'components/App';\n\nconst MOVIES_KEY = 'moviesWatchlist';\n\nexport const WatchlistButton = ({ movieData }) => {\n  const [isMovieSaved, setMovieSaved] = useState(false);\n  const { watchlist, addMovieToWatchlist, removeMovieFromWatchlist } =\n    useContext(WatchlistContext);\n  const [watchlistUsed, setWatchlistUsed] = useState(false);\n\n  useEffect(() => {\n    const isSaved = watchlist.find(({ id }) => id === movieData.id);\n    isSaved ? setMovieSaved(true) : setMovieSaved(false);\n  }, [movieData.id, watchlist]);\n\n  useEffect(() => {\n    if (!watchlistUsed) return;\n    localStorage.setItem(MOVIES_KEY, JSON.stringify(watchlist));\n  }, [watchlist, watchlistUsed]);\n\n  return (\n    <>\n      {isMovieSaved ? (\n        <RemoveButton\n          type=\"button\"\n          aria-label=\"remove from watchlist\"\n          onClick={() => removeMovieFromWatchlist(movieData)}\n        >\n          <VideoMinus />\n        </RemoveButton>\n      ) : (\n        <Button\n          type=\"button\"\n          aria-label=\"add to watchlist\"\n          onClick={() => {\n            addMovieToWatchlist(movieData);\n            setWatchlistUsed(true);\n          }}\n        >\n          <VideoPlus />\n        </Button>\n      )}\n    </>\n  );\n};\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Error, Hero, Info, PageTitle, Title } from './HomePage.styled';\n\nconst IMAGE_PATH = 'https://image.tmdb.org/t/p/original/';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [heroImage, setHeroImage] = useState('');\n\n  useEffect(() => {\n    fetchMoviesData('trending')\n      .then(({ results }) => {\n        if (!results.length) {\n          setError(\n            'We are sorry, but something went wrong :( Please, try again later'\n          );\n          return;\n        }\n        setMovies(results);\n        setError('');\n        const randomIndex = Math.floor(Math.random() * results.length + 0);\n        setHeroImage(`${IMAGE_PATH}${results[randomIndex]?.backdrop_path}`);\n      })\n      .catch(() =>\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        )\n      );\n  }, []);\n\n  return (\n    <div>\n      <Hero $heroImage={heroImage}>\n        <PageTitle>\n          Welcome to MovieMingle - <br />\n          Your Gateway to Cinematic Excellence!\n        </PageTitle>\n        <Info>\n          Discover the latest and trending films or <br />\n          explore a world of movies tailored to your preferences. <br />\n          Whether you're in the mood for blockbuster hits or hidden gems, <br />\n          our powerful search engine has you covered.\n        </Info>\n      </Hero>\n      <Title>Popular today:</Title>\n      {error === '' ? <MoviesList movies={movies} /> : <Error>{error}</Error>}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  max-width: 85%;\n  text-align: center;\n  color: var(--basic-white);\n  font-size: 60px;\n  line-height: 1.33;\n  text-shadow: 0px 11px 10px #082925b2;\n\n  @media screen and (max-width: 1279px) {\n    font-size: 44px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 32px;\n  }\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: var(--basic-white);\n  text-shadow: 3px 0px 7px rgba(85, 85, 85, 0.8),\n    -3px 0px 7px rgba(85, 85, 85, 0.8), 0px 4px 7px rgba(85, 85, 85, 0.8);\n\n  @media screen and (max-width: 1279px) {\n    font-size: 20px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  margin: 0 auto 16px auto;\n\n  @media screen and (max-width: 1279px) {\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Error = styled.p`\n  font-size: 20px;\n  margin: 24px 0;\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 52px;\n  width: 100%;\n  height: 480px;\n  background: linear-gradient(to top, #082925b2 40%, #0c403b79 100%),\n    center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n\n  @media screen and (max-width: 639px) {\n    gap: 32px;\n  }\n`;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `/movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","fadeIn","Item","CardLink","Link","_templateObject2","ImgWrap","_templateObject3","Image","_templateObject4","Title","_templateObject5","Rating","_templateObject6","_ref","$color","ratingColorDetect","number","color","MovieItem","movie","location","useLocation","_jsxs","children","to","pathname","concat","id","state","from","_jsx","src","poster_path","alt","title","release_date","Date","toLocaleDateString","year","month","day","Math","round","vote_average","WatchlistButton","movieData","movies","map","Button","RemoveButton","VideoPlus","TbVideoPlus","VideoMinus","TbVideoMinus","_useState","useState","_useState2","_slicedToArray","isMovieSaved","setMovieSaved","_useContext","useContext","WatchlistContext","watchlist","addMovieToWatchlist","removeMovieFromWatchlist","_useState3","_useState4","watchlistUsed","setWatchlistUsed","useEffect","isSaved","find","_ref2","localStorage","setItem","JSON","stringify","_Fragment","type","onClick","setMovies","error","setError","_useState5","_useState6","heroImage","setHeroImage","fetchMoviesData","then","_results$randomIndex","results","length","randomIndex","floor","random","backdrop_path","catch","Hero","$heroImage","PageTitle","Info","MoviesList","Error","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","query","page","endpointByType","searchParams","response","_context","prev","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","image","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}