{"version":3,"file":"static/js/722.f8c9c7df.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MovieItem/MovieItem.styled.jsx","helpers/ratingColorDetect.js","components/MovieItem/MovieItem.jsx","components/MoviesList/MoviesList.jsx","components/WatchlistButton/WatchlistButton.styled.jsx","components/WatchlistButton/WatchlistButton.jsx","helpers/scrollsToElements.js","pages/HomePage/HomePage.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","services/tmdb-api.js"],"sourcesContent":["import { fadeIn } from 'GlobalStyle';\n\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0 auto;\n  max-width: 1248px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n  animation: ${fadeIn} 700ms ease-in-out;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  position: relative;\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const CardLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 8px;\n  width: 224px;\n`;\n\nexport const ImgWrap = styled.div`\n  margin: 0 auto 8px auto;\n  border-radius: 8px;\n  width: 200px;\n  height: 268px;\n  display: flex;\n  align-content: center;\n  overflow: hidden;\n  transition: all var(--basic-transition);\n  &:hover {\n    box-shadow: 0px 0px 16px 4px var(--basic-dark);\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  width: 100%;\n  object-fit: cover;\n  transition: transform var(--basic-transition);\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Title = styled.h3`\n  text-align: center;\n\n  @media screen and (max-width: 639px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Rating = styled.div`\n  position: absolute;\n  top: 232px;\n  left: 12px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  border: 2px solid var(--basic-white);\n  background-color: ${({ $color }) => $color};\n  color: var(--basic-white);\n  box-shadow: rgba(193, 193, 193, 0.766) 0px 2px 4px 0px,\n    rgba(225, 225, 225, 0.682) 0px 2px 16px 0px;\n`;\n","export function ratingColorDetect(number) {\n  let color;\n  if (!number) {\n    color = '#959393';\n  } else if (number < 50) {\n    color = '#ce3030';\n  } else if (number < 70) {\n    color = '#e9ad3d';\n  } else if (number >= 70) {\n    color = '#437d33';\n  }\n  return color;\n}\n","import { useLocation } from 'react-router-dom';\nimport {\n  CardLink,\n  Image,\n  ImgWrap,\n  Item,\n  Rating,\n  Title,\n} from './MovieItem.styled';\nimport { ratingColorDetect } from 'helpers/ratingColorDetect';\nimport { WatchlistButton } from 'components/WatchlistButton/WatchlistButton';\n\nexport const MovieItem = ({ movie }) => {\n  const location = useLocation();\n  const POSTERS_URL = 'https://image.tmdb.org/t/p/';\n\n  const dateOptions = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  return (\n    <Item>\n      <CardLink\n        to={\n          location.pathname === '/' || location.pathname === '/watchlist'\n            ? `/movies/${movie.id}`\n            : `${movie.id}`\n        }\n        state={{ from: location }}\n      >\n        <ImgWrap>\n          <Image\n            src={\n              movie.poster_path\n                ? `${POSTERS_URL}w300${movie.poster_path}`\n                : 'https://cdn.pixabay.com/photo/2014/01/21/16/01/backdrop-249158_1280.jpg'\n            }\n            alt={movie.title}\n          />\n        </ImgWrap>\n        <Title>{movie.title}</Title>\n        <p>\n          {movie.release_date\n            ? new Date(movie.release_date).toLocaleDateString(\n                'en-US',\n                dateOptions\n              )\n            : ''}\n        </p>\n        <Rating $color={ratingColorDetect(Math.round(movie.vote_average * 10))}>\n          {movie.vote_average === 0\n            ? 'NR'\n            : `${Math.round(movie.vote_average * 10)}%`}\n        </Rating>\n      </CardLink>\n      <WatchlistButton movieData={movie} />\n    </Item>\n  );\n};\n","import { List } from './MoviesList.styled';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <List>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} />\n      ))}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\nimport { TbVideoMinus, TbVideoPlus } from 'react-icons/tb';\n\nexport const Button = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  background-color: var(--accent);\n  color: var(--basic-white);\n  border: none;\n  border-radius: 50%;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  cursor: pointer;\n`;\n\nexport const RemoveButton = styled(Button)`\n  background-color: var(--basic-gray);\n`;\n\nexport const VideoPlus = styled(TbVideoPlus)`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const VideoMinus = styled(TbVideoMinus)`\n  width: 100%;\n  height: 100%;\n`;\n","import { useContext, useEffect, useState } from 'react';\nimport {\n  Button,\n  RemoveButton,\n  VideoMinus,\n  VideoPlus,\n} from './WatchlistButton.styled';\nimport { WatchlistContext } from 'components/App';\n\nconst MOVIES_KEY = 'moviesWatchlist';\n\nexport const WatchlistButton = ({ movieData }) => {\n  const [isMovieSaved, setMovieSaved] = useState(false);\n  const { watchlist, addMovieToWatchlist, removeMovieFromWatchlist } =\n    useContext(WatchlistContext);\n\n  useEffect(() => {\n    const isSaved = watchlist.find(({ id }) => id === movieData.id);\n    isSaved ? setMovieSaved(true) : setMovieSaved(false);\n  }, [movieData.id, watchlist]);\n\n  useEffect(() => {\n    if (watchlist.length === 0) {\n      return;\n    }\n    localStorage.setItem(MOVIES_KEY, JSON.stringify(watchlist));\n  }, [watchlist]);\n\n  return (\n    <>\n      {isMovieSaved ? (\n        <RemoveButton\n          type=\"button\"\n          aria-label=\"remove from watchlist\"\n          onClick={() => removeMovieFromWatchlist(movieData)}\n        >\n          <VideoMinus />\n        </RemoveButton>\n      ) : (\n        <Button\n          type=\"button\"\n          aria-label=\"add to watchlist\"\n          onClick={() => {\n            addMovieToWatchlist(movieData);\n          }}\n        >\n          <VideoPlus />\n        </Button>\n      )}\n    </>\n  );\n};\n","import { scroller } from 'react-scroll';\n\nexport const scrollToAdditionalMenu = () => {\n  scroller.scrollTo('additionalMenu', {\n    duration: 1000,\n    smooth: true,\n    offset: -80,\n  });\n};\n\nexport const scrollMoviesPageStart = () => {\n  scroller.scrollTo('moviesPageStart', {\n    duration: 1000,\n    smooth: true,\n    offset: -100,\n  });\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  max-width: 85%;\n  text-align: center;\n  color: var(--basic-white);\n  font-size: 60px;\n  line-height: 1.33;\n  text-shadow: 0px 11px 10px #082925b2;\n\n  @media screen and (max-width: 1279px) {\n    font-size: 44px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 32px;\n  }\n`;\n\nexport const Info = styled.p`\n  text-align: center;\n  font-size: 24px;\n  color: var(--basic-white);\n  text-shadow: 3px 0px 7px rgba(85, 85, 85, 0.8),\n    -3px 0px 7px rgba(85, 85, 85, 0.8), 0px 4px 7px rgba(85, 85, 85, 0.8);\n\n  @media screen and (max-width: 1279px) {\n    font-size: 20px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  margin: 0 auto 16px auto;\n\n  @media screen and (max-width: 1279px) {\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 24px;\n  }\n`;\n\nexport const Error = styled.p`\n  font-size: 20px;\n  margin: 24px 0;\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n\nexport const Hero = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 52px;\n  width: 100%;\n  height: 480px;\n  background: linear-gradient(to top, #082925b2 40%, #0c403b79 100%),\n    center / cover no-repeat url(${({ $heroImage }) => $heroImage});\n  margin-bottom: 24px;\n  border: none;\n\n  @media screen and (max-width: 639px) {\n    gap: 32px;\n  }\n`;\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchForm = styled(Form)`\n  margin: 0 auto 24px auto;\n  padding-left: 12px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: var(--basic-white);\n  border: 1px solid var(--basic-dark);\n  border-radius: 3px;\n  overflow: hidden;\n\n  @media screen and (max-width: 639px) {\n    margin: 0 auto 16px auto;\n  }\n`;\n\nexport const SearchFormButton = styled.button`\n  margin-left: 12px;\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity var(--basic-transition);\n  cursor: pointer;\n  outline: none;\n  background-color: var(--basic-light);\n\n  &:hover {\n    opacity: 1;\n  }\n\n  &:disabled {\n    opacity: 0.3;\n    cursor: not-allowed;\n  }\n\n  @media screen and (max-width: 639px) {\n    width: 36px;\n    height: 36px;\n  }\n`;\n\nexport const ButtonImg = styled(BsSearch)`\n  width: 36px;\n  height: 36px;\n  color: var(--basic-dark);\n\n  @media screen and (max-width: 639px) {\n    width: 24px;\n    height: 24px;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n\n    @media screen and (max-width: 639px) {\n      font-size: 16px;\n    }\n  }\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n  }\n`;\n","import { Formik } from 'formik';\nimport {\n  SearchForm,\n  SearchFormButton,\n  ButtonLabel,\n  SearchInput,\n  ButtonImg,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ handleSearch, handleChange, query }) => {\n  return (\n    <>\n      <Formik initialValues={{ searchQuery: '' }} onSubmit={handleSearch}>\n        <SearchForm>\n          <SearchInput\n            value={query}\n            name=\"searchQuery\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search films\"\n            onChange={handleChange}\n          />\n\n          <SearchFormButton type=\"submit\">\n            <ButtonImg />\n            <ButtonLabel>Search</ButtonLabel>\n          </SearchFormButton>\n        </SearchForm>\n      </Formik>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 24px;\n  padding: 24px;\n\n  @media screen and (max-width: 639px) {\n    gap: 16px;\n  }\n`;\n\nexport const Info = styled.h3`\n  width: 800px;\n  text-align: center;\n\n  @media screen and (max-width: 639px) {\n    font-size: 16px;\n    max-width: 100%;\n  }\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { Error } from 'pages/HomePage/HomePage.styled';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesData } from 'services/tmdb-api';\nimport { Info, Wrap } from './MoviesPage.styled';\nimport { Pagination } from '@mui/material';\nimport { scrollMoviesPageStart } from 'helpers/scrollsToElements';\n\nconst MoviesPage = () => {\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [pages, setPages] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pagesToShow, setPagesToShow] = useState(0);\n\n  const handleChange = ({ target: { value } }) => {\n    if (!value) setSearchParams({});\n    setQuery(value);\n  };\n\n  useEffect(() => {\n    const value = searchParams.get('query');\n    if (value) {\n      setQuery(value);\n    }\n  }, [searchParams]);\n\n  const handleSearch = () => {\n    if (query === '') {\n      setError('Please enter your search query');\n      setPagesToShow([]);\n      return;\n    }\n    setSearchParams({ query: query, page: 1 });\n    setError('');\n    setCurrentPage(1);\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    const urlQuery = searchParams.get('query');\n    const urlPage = Number(searchParams.get('page'));\n    setCurrentPage(urlPage);\n\n    if (!urlQuery) return;\n\n    fetchMoviesData('searchByQuery', 0, urlQuery, urlPage)\n      .then(({ results, total_pages }) => {\n        if (!results.length) {\n          setError(\n            `We couldn't find movies, mentioning ${urlQuery.toUpperCase()}. Try something else`\n          );\n          setPagesToShow([]);\n          return;\n        }\n        setMovies(results);\n        setPages(total_pages);\n        setError('');\n        setPagesToShow(total_pages);\n      })\n      .catch(() => {\n        setError(\n          'We are sorry, but something went wrong :( Please, try again later'\n        );\n        setPagesToShow([]);\n      })\n      .finally(() => {\n        scrollMoviesPageStart();\n      });\n  }, [searchParams, query]);\n\n  const handlePageClick = event => {\n    const number = Number(event.target.innerText);\n    setCurrentPage(number);\n    setSearchParams({ query: query, page: number });\n  };\n\n  return (\n    <Wrap>\n      <Info name=\"moviesPageStart\">\n        Ready to explore the world of cinema? <br />\n        Simply enter your movie query, and let the magic unfold!\n      </Info>\n      <Searchbar\n        handleSearch={handleSearch}\n        handleChange={handleChange}\n        query={query}\n      />\n      {error === '' ? <MoviesList movies={movies} /> : <Error>{error}</Error>}\n      {pages > 1 && (\n        <Pagination\n          count={pagesToShow}\n          page={currentPage}\n          onChange={handlePageClick}\n          hidePrevButton\n          hideNextButton\n          color={'success'}\n          sx={{\n            '& .MuiPaginationItem-root': {\n              color: '#ffffff',\n              backgroundColor: '#266861',\n              fontFamily: 'inherit',\n            },\n            '& .MuiPaginationItem-ellipsis': {\n              backgroundColor: 'transparent',\n              color: 'inherit',\n              fontSize: '24px',\n            },\n          }}\n        />\n      )}\n    </Wrap>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst api_key = '81bc6a75d9ad77927c9b3f7e8ad30411';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchMoviesData(type, id, query, page) {\n  const endpointByType = {\n    trending: '/trending/movie/day',\n    movieById: `/movie/${id}`,\n    searchByQuery: '/search/movie',\n    searchVideos: `/movie/${id}/videos`,\n    cast: `/movie/${id}/credits`,\n    reviews: `/movie/${id}/reviews`,\n    image: `/movie/${id}/images`,\n  };\n\n  const searchParams = new URLSearchParams({\n    query: query,\n    include_adult: false,\n    page: page,\n  });\n\n  const response = await axios.get(\n    `${BASE_URL}${endpointByType[type]}?api_key=${api_key}&${\n      type === 'searchByQuery' ? searchParams : ''\n    }`\n  );\n  return response.data;\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","fadeIn","Item","CardLink","Link","_templateObject2","ImgWrap","_templateObject3","Image","_templateObject4","Title","_templateObject5","Rating","_templateObject6","_ref","$color","ratingColorDetect","number","color","MovieItem","movie","location","useLocation","_jsxs","children","to","pathname","concat","id","state","from","_jsx","src","poster_path","alt","title","release_date","Date","toLocaleDateString","year","month","day","Math","round","vote_average","WatchlistButton","movieData","movies","map","Button","RemoveButton","VideoPlus","TbVideoPlus","VideoMinus","TbVideoMinus","_useState","useState","_useState2","_slicedToArray","isMovieSaved","setMovieSaved","_useContext","useContext","WatchlistContext","watchlist","addMovieToWatchlist","removeMovieFromWatchlist","useEffect","isSaved","find","_ref2","length","localStorage","setItem","JSON","stringify","_Fragment","type","onClick","scrollToAdditionalMenu","scroller","duration","smooth","offset","scrollMoviesPageStart","PageTitle","Info","Error","Hero","$heroImage","SearchForm","Form","SearchFormButton","ButtonImg","BsSearch","ButtonLabel","SearchInput","Field","Searchbar","handleSearch","handleChange","query","Formik","initialValues","searchQuery","onSubmit","value","name","autoComplete","autoFocus","placeholder","onChange","Wrap","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","setMovies","_useState5","_useState6","error","setError","_useState7","_useState8","pages","setPages","_useState9","_useState10","currentPage","setCurrentPage","_useState11","_useState12","pagesToShow","setPagesToShow","get","urlQuery","urlPage","Number","fetchMoviesData","then","results","total_pages","toUpperCase","catch","finally","page","target","MoviesList","Pagination","count","event","innerText","hidePrevButton","hideNextButton","sx","backgroundColor","fontFamily","fontSize","api_key","BASE_URL","_x","_x2","_x3","_x4","_fetchMoviesData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","endpointByType","response","_context","prev","next","trending","movieById","searchByQuery","searchVideos","cast","reviews","image","URLSearchParams","include_adult","axios","sent","abrupt","data","stop"],"sourceRoot":""}